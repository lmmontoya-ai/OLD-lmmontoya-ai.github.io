---
import type { Post } from '../../utils/content';

interface Props {
  post: Post;
  accentColor: 'blue' | 'gold' | 'green';
}

const { post, accentColor } = Astro.props;

// Type badges configuration with icons
const typeBadges = {
  blog: {
    icon: 'M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16',
    label: 'Blog Post'
  },
  roadmap: {
    icon: 'M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 01.553-.894L9 2l6 3 5.447-2.724A1 1 0 0121 3.382v10.764a1 1 0 01-.553.894L15 18l-6-3z',
    label: 'Roadmap'
  },
  project: {
    icon: 'M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10',
    label: 'Project'
  },
  literature: {
    icon: 'M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253',
    label: 'Literature'
  },
  note: {
    icon: 'M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z',
    label: 'Note'
  },
  guide: {
    icon: 'M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z',
    label: 'Guide'
  }
};

// Accent color styles
const accentStyles = {
  blue: 'bg-brand-primary/10 text-brand-primary border-brand-primary/20',
  gold: 'bg-brand-secondary/10 text-brand-secondary border-brand-secondary/20',
  green: 'bg-status-success/10 text-status-success border-status-success/20',
};

// Status badge configuration
const statusConfig = {
  'in-progress': {
    label: 'In Progress',
    classes: 'bg-status-warning/10 text-status-warning border-status-warning/20',
    icon: true // Shows animated dot
  },
  'completed': {
    label: 'Completed',
    classes: 'bg-status-success/10 text-status-success border-status-success/20',
    icon: false
  },
  'planned': {
    label: 'Planned',
    classes: 'bg-content-tertiary/10 text-content-tertiary border-content-tertiary/20',
    icon: false
  }
};

// Project/roadmap specific metadata
const hasProjectLinks = post.data.project?.links && Object.values(post.data.project.links).some(link => link);
const isRoadmapPost = post.data.types.includes('roadmap');
const isProjectPost = post.data.types.includes('project');
---

<header class="mb-12">
  <!-- Type badges and status -->
  <div class="flex flex-wrap items-center gap-2 mb-6">
    {post.data.types.map((type) => {
      const badge = typeBadges[type as keyof typeof typeBadges];
      return badge ? (
        <span class={`inline-flex items-center gap-1.5 px-3 py-1 rounded-full text-xs font-medium capitalize ${accentStyles[accentColor]} transition-colors`}>
          <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={badge.icon}></path>
          </svg>
          {badge.label}
        </span>
      ) : (
        <span class={`inline-flex items-center gap-1.5 px-3 py-1 rounded-full text-xs font-medium capitalize ${accentStyles[accentColor]} transition-colors`}>
          {type}
        </span>
      );
    })}

    {/* Status badge */}
    {post.data.status && statusConfig[post.data.status as keyof typeof statusConfig] && (
      <span class={`inline-flex items-center gap-1.5 px-3 py-1 rounded-full text-xs font-medium ${statusConfig[post.data.status as keyof typeof statusConfig].classes} transition-colors`}>
        {statusConfig[post.data.status as keyof typeof statusConfig].icon && (
          <div class="w-1.5 h-1.5 rounded-full bg-current animate-pulse"></div>
        )}
        {statusConfig[post.data.status as keyof typeof statusConfig].label}
      </span>
    )}

    {/* Roadmap phase indicator */}
    {isRoadmapPost && post.data.roadmap?.phase && (
      <span class="inline-flex items-center gap-1.5 px-3 py-1 rounded-full text-xs font-medium bg-brand-secondary/10 text-brand-secondary border border-brand-secondary/20">
        <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
        </svg>
        Phase {post.data.roadmap.phase}
      </span>
    )}
  </div>

  <!-- Title -->
  <h1 class="text-4xl md:text-5xl font-sans font-bold text-content-primary leading-tight mb-4">
    {post.data.title}
  </h1>

  <!-- Excerpt -->
  <p class="text-xl text-content-secondary leading-relaxed mb-6">
    {post.data.excerpt}
  </p>

  <!-- Metadata bar -->
  <div class="flex flex-wrap items-center gap-4 text-sm text-content-tertiary font-mono mb-6">
    <!-- Date -->
    <time datetime={post.data.date.toISOString()} class="flex items-center gap-1.5">
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
      </svg>
      <span class="opacity-80">{post.data.date.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</span>
    </time>

    <!-- Reading time -->
    {post.data.readingTime && (
      <>
        <span class="opacity-60">•</span>
        <div class="flex items-center gap-1.5">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          <span class="opacity-80">{post.data.readingTime} min read</span>
        </div>
      </>
    )}

    <!-- Word count -->
    {post.data.wordCount && (
      <>
        <span class="opacity-60">•</span>
        <div class="flex items-center gap-1.5">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
          </svg>
          <span class="opacity-80">{post.data.wordCount.toLocaleString()} words</span>
        </div>
      </>
    )}

    <!-- Literature specific metadata -->
    {post.data.literature?.year && (
      <>
        <span class="opacity-60">•</span>
        <span class="opacity-80">{post.data.literature.year}</span>
      </>
    )}

    {post.data.literature?.difficulty && (
      <>
        <span class="opacity-60">•</span>
        <span class="opacity-80 capitalize">{post.data.literature.difficulty} level</span>
      </>
    )}
  </div>

  <!-- Project/external links -->
  {hasProjectLinks && (
    <div class="flex flex-wrap items-center gap-3 mb-6">
      {/* GitHub link */}
      {post.data.project?.links?.github && (
        <a
          href={post.data.project.links.github}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center gap-2 px-3 py-2 text-sm font-medium text-content-secondary hover:text-content-primary bg-bg-secondary hover:bg-bg-tertiary border border-border-secondary hover:border-border-primary rounded-lg transition-all duration-200"
        >
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
          </svg>
          View Source
        </a>
      )}

      {/* Demo/live link */}
      {post.data.project?.links?.demo && (
        <a
          href={post.data.project.links.demo}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center gap-2 px-3 py-2 text-sm font-medium text-content-secondary hover:text-content-primary bg-bg-secondary hover:bg-bg-tertiary border border-border-secondary hover:border-border-primary rounded-lg transition-all duration-200"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
          </svg>
          Live Demo
        </a>
      )}

      {/* Paper/publication link */}
      {post.data.project?.links?.paper && (
        <a
          href={post.data.project.links.paper}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center gap-2 px-3 py-2 text-sm font-medium text-content-secondary hover:text-content-primary bg-bg-secondary hover:bg-bg-tertiary border border-border-secondary hover:border-border-primary rounded-lg transition-all duration-200"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
          </svg>
          Read Paper
        </a>
      )}

      {/* Website link */}
      {post.data.project?.links?.website && (
        <a
          href={post.data.project.links.website}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center gap-2 px-3 py-2 text-sm font-medium text-content-secondary hover:text-content-primary bg-bg-secondary hover:bg-bg-tertiary border border-border-secondary hover:border-border-primary rounded-lg transition-all duration-200"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9"></path>
          </svg>
          Visit Website
        </a>
      )}
    </div>
  )}

  <!-- Hero image -->
  {post.data.media?.hero && (
    <div class="mt-8 -mx-6 md:-mx-12 lg:-mx-16">
      <img
        src={post.data.media.hero}
        alt={post.data.title}
        class="w-full h-64 md:h-80 lg:h-96 object-cover rounded-lg shadow-lg"
        loading="eager"
      />
    </div>
  )}
</header>
