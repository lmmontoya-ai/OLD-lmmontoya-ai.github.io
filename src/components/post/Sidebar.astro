---
// src/components/post/Sidebar.astro
// Sidebar component for post layout with navigation, search, and TOC

import type { Post } from '../../utils/content';

interface Props {
  post: Post;
  relatedPosts: Post[];
  headings: Array<{ text: string; slug: string; depth: number }>;
  showToc?: boolean;
  accentColor?: string;
}

const { post, relatedPosts, headings, showToc = true, accentColor = 'blue' } = Astro.props;

// Determine accent color classes
const accentClasses = {
  blue: 'border-brand-primary',
  gold: 'border-brand-secondary',
  green: 'border-status-success',
  red: 'border-status-error',
  purple: 'border-interactive-secondary',
} as const;

const sidebarAccentClass = accentClasses[accentColor as keyof typeof accentClasses] || accentClasses.blue;

// Filter headings for TOC (depth 2-3)
const tocHeadings = showToc ? headings.filter(h => h.depth >= 2 && h.depth <= 3) : [];

// Determine back link based on post type
const getBackLink = (post: Post) => {
  const primaryType = post.data.types[0];
  switch (primaryType) {
    case 'roadmap':
      return { href: '/roadmap', label: 'Back to Roadmap' };
    case 'project':
      return { href: '/projects', label: 'Back to Projects' };
    case 'literature':
      return { href: '/literature', label: 'Back to Literature' };
    case 'guide':
      return { href: '/blog', label: 'Back to Guides' };
    case 'note':
      return { href: '/blog', label: 'Back to Notes' };
    default:
      return { href: '/blog', label: 'Back to Blog' };
  }
};

const backLink = getBackLink(post);
---

<aside class={`hidden lg:block w-80 shrink-0 ${sidebarAccentClass} border-l-2 pl-8`}>
  <div class="sticky top-24 space-y-8 max-h-[calc(100vh-8rem)] overflow-y-auto">
    <!-- Search -->
    <div>
      <div class="relative">
        <input
          type="search"
          placeholder="Search posts..."
          class="w-full px-4 py-2.5 pl-10 rounded-lg border border-border-primary bg-bg-secondary text-content-primary placeholder-content-tertiary focus:outline-none focus:ring-2 focus:ring-brand-primary/20 focus:border-brand-primary transition-colors"
          id="post-search"
        />
        <svg
          class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-content-tertiary pointer-events-none"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
        </svg>
      </div>
    </div>

    <!-- Table of Contents -->
    {tocHeadings.length > 0 && (
      <div class="bg-bg-secondary/50 backdrop-blur-sm rounded-xl border border-border-secondary p-6">
        <h3 class="text-sm font-mono font-medium text-content-tertiary uppercase tracking-wider mb-4">
          On this page
        </h3>
        <nav>
          <ul class="space-y-2">
            {tocHeadings.map((heading) => (
              <li>
                <a
                  href={`#${heading.slug}`}
                  class={`block text-sm text-content-secondary hover:text-content-primary transition-colors ${
                    heading.depth === 3 ? 'pl-4 text-xs' : ''
                  }`}
                  data-toc-link
                  data-heading-id={heading.slug}
                >
                  {heading.text}
                </a>
              </li>
            ))}
          </ul>
        </nav>
      </div>
    )}

    <!-- Quick Navigation -->
    <div class="bg-bg-secondary/50 backdrop-blur-sm rounded-xl border border-border-secondary p-6">
      <h3 class="text-sm font-mono font-medium text-content-tertiary uppercase tracking-wider mb-4">
        Navigate
      </h3>
      <div class="space-y-3">
        <a href={backLink.href} class="block text-sm text-content-secondary hover:text-content-primary transition-colors">
          ‚Üê {backLink.label}
        </a>
        {relatedPosts.length > 0 && (
          <div class="pt-3 border-t border-border-secondary">
            <h4 class="text-xs font-mono font-medium text-content-tertiary uppercase tracking-wider mb-2">
              Related
            </h4>
            {relatedPosts.slice(0, 3).map((relatedPost) => (
              <a
                href={`/posts/${relatedPost.slug}`}
                class="block text-sm text-content-secondary hover:text-content-primary transition-colors mb-2 line-clamp-2"
              >
                {relatedPost.data.title}
              </a>
            ))}
          </div>
        )}
      </div>
    </div>

    <!-- Post Actions -->
    <div class="bg-bg-secondary/50 backdrop-blur-sm rounded-xl border border-border-secondary p-6">
      <h3 class="text-sm font-mono font-medium text-content-tertiary uppercase tracking-wider mb-4">
        Actions
      </h3>
      <div class="space-y-2">
        {post.data.repository && (
          <a
            href={post.data.repository}
            target="_blank"
            rel="noopener noreferrer"
            class="flex items-center gap-2 text-sm text-content-secondary hover:text-content-primary transition-colors"
          >
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
            </svg>
            View Repository
          </a>
        )}
        {post.data.demo && (
          <a
            href={post.data.demo}
            target="_blank"
            rel="noopener noreferrer"
            class="flex items-center gap-2 text-sm text-content-secondary hover:text-content-primary transition-colors"
          >
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
            </svg>
            Live Demo
          </a>
        )}
        <button
          class="flex items-center gap-2 text-sm text-content-secondary hover:text-content-primary transition-colors w-full text-left"
          id="share-post"
          data-title={post.data.title}
          data-url={`${Astro.site}/posts/${post.slug}`}
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"/>
          </svg>
          Share Post
        </button>
      </div>
    </div>
  </div>
</aside>

<script>
  // Enhanced TOC active link tracking
  function updateActiveTocLink() {
    const headings = document.querySelectorAll('h2[id], h3[id]');
    const tocLinks = document.querySelectorAll('[data-toc-link]');

    if (!headings.length || !tocLinks.length) return;

    let activeHeading = null;
    const scrollPosition = window.scrollY + 100; // Offset for better UX

    // Find the currently visible heading
    for (let i = headings.length - 1; i >= 0; i--) {
      const heading = headings[i] as HTMLElement;
      if (heading.offsetTop <= scrollPosition) {
        activeHeading = heading;
        break;
      }
    }

    // Update TOC link states
    tocLinks.forEach(link => {
      const linkElement = link as HTMLElement;
      const headingId = linkElement.getAttribute('data-heading-id');

      if (activeHeading && headingId === activeHeading.id) {
        linkElement.classList.add('text-content-primary', 'font-medium');
        linkElement.classList.remove('text-content-secondary');
      } else {
        linkElement.classList.add('text-content-secondary');
        linkElement.classList.remove('text-content-primary', 'font-medium');
      }
    });
  }

  // Share functionality
  function setupShareButton() {
    const shareButton = document.getElementById('share-post');
    if (!shareButton) return;

    shareButton.addEventListener('click', async () => {
      const title = shareButton.getAttribute('data-title') || document.title;
      const url = shareButton.getAttribute('data-url') || window.location.href;

      if (navigator.share) {
        try {
          await navigator.share({ title, url });
        } catch (err) {
          // Fallback to clipboard
          copyToClipboard(url);
        }
      } else {
        copyToClipboard(url);
      }
    });
  }

  function copyToClipboard(text: string) {
    navigator.clipboard.writeText(text).then(() => {
      // You could show a toast notification here
      console.log('URL copied to clipboard');
    });
  }

  // Initialize on page load
  document.addEventListener('DOMContentLoaded', () => {
    updateActiveTocLink();
    setupShareButton();

    // Update active link on scroll
    let ticking = false;
    window.addEventListener('scroll', () => {
      if (!ticking) {
        requestAnimationFrame(() => {
          updateActiveTocLink();
          ticking = false;
        });
        ticking = true;
      }
    });
  });
</script>
