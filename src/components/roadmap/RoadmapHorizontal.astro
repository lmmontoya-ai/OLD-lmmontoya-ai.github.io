---
// Horizontal roadmap component following the project design principles
import type { CollectionEntry } from 'astro:content';

interface Props {
  posts: CollectionEntry<'posts'>[];
}

const { posts } = Astro.props;

// Sort posts chronologically
const sortedPosts = posts.sort((a, b) => a.data.date.getTime() - b.data.date.getTime());

// Get status styling following project card patterns
const getStatusStyling = (status: string) => {
  switch (status) {
    case 'completed':
      return {
        badge: 'bg-status-success/10 text-status-success',
        border: 'hover:border-[rgb(var(--color-status-success))]/30',
        icon: 'text-status-success',
        iconBg: 'bg-status-success/10'
      };
    case 'in-progress':
      return {
        badge: 'bg-status-warning/10 text-status-warning',
        border: 'hover:border-[rgb(var(--color-status-warning))]/30',
        icon: 'text-status-warning',
        iconBg: 'bg-status-warning/10'
      };
    case 'planned':
      return {
        badge: 'bg-interactive-blue/10 text-interactive-blue',
        border: 'hover:border-[rgb(var(--color-interactive-blue))]/30',
        icon: 'text-interactive-blue',
        iconBg: 'bg-interactive-blue/10'
      };
    default:
      return {
        badge: 'bg-subtle/10 text-subtle',
        border: 'hover:border-[rgb(var(--color-border-subtle))]/30',
        icon: 'text-subtle',
        iconBg: 'bg-subtle/10'
      };
  }
};

const getStatusIcon = (status: string) => {
  switch (status) {
    case 'completed':
      return 'M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z';
    case 'in-progress':
      return 'M12 6v6l4 2m6 2a9 9 0 11-18 0 9 9 0 0118 0z';
    case 'planned':
      return 'M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 002 2z';
    default:
      return 'M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z';
  }
};
---

<div class="roadmap-horizontal">
  <!-- Horizontal scroll container -->
  <div class="flex gap-6 overflow-x-auto pb-6 scroll-smooth">
    <!-- Timeline connector line -->
    <div class="absolute top-20 left-0 right-0 h-0.5 bg-gradient-to-r from-interactive-blue via-secondary-purple to-accent-green -z-10 hidden md:block"></div>
    
    {sortedPosts.map((post, index) => {
      const styling = getStatusStyling(post.data.status);
      
      return (
        <div class="flex-shrink-0 w-80 relative">
          <a href={`/posts/${post.id}`} class="block group">
            <article class={`
              bg-surface-primary rounded-xl border transition-all duration-300
              ${styling.border}
              p-6 h-full group relative
            `}>
              
              <!-- Status Badge -->
              <div class="absolute top-4 right-4">
                <span class={`px-2 py-1 text-xs font-medium rounded-full ${styling.badge}`}>
                  {post.data.status.replace('-', ' ')}
                </span>
              </div>

              <!-- Phase Badge -->
              {post.data.roadmap?.phase && (
                <div class="absolute top-4 left-4">
                  <span class="px-2 py-1 text-xs font-medium rounded bg-surface-tertiary text-secondary">
                    Phase {post.data.roadmap.phase}
                  </span>
                </div>
              )}

              <!-- Icon -->
              <div class={`flex items-center justify-center w-12 h-12 rounded-lg ${styling.iconBg} mb-4 mt-8`}>
                <svg class={`w-6 h-6 ${styling.icon}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={getStatusIcon(post.data.status)}></path>
                </svg>
              </div>

              <!-- Content -->
              <div class="space-y-3">
                <!-- Date -->
                <time class="text-sm text-content-tertiary">
                  {post.data.date.toLocaleDateString('en-US', { 
                    year: 'numeric', 
                    month: 'long', 
                    day: 'numeric' 
                  })}
                </time>

                <!-- Title -->
                <h3 class="text-xl font-semibold text-content-primary group-hover:text-interactive-blue transition-colors">
                  {post.data.title}
                </h3>

                <!-- Excerpt -->
                <p class="text-content-secondary text-sm leading-relaxed line-clamp-3">
                  {post.data.excerpt}
                </p>

                <!-- Key Outcomes -->
                {post.data.roadmap?.outcomes && (
                  <div class="mt-4">
                    <h4 class="text-xs font-medium text-content-primary mb-2 uppercase tracking-wide">
                      Key Outcomes
                    </h4>
                    <ul class="text-xs text-content-secondary space-y-1">
                      {post.data.roadmap.outcomes.slice(0, 2).map(outcome => (
                        <li class="flex items-start gap-2">
                          <span class="text-accent-green mt-0.5">â€¢</span>
                          <span class="line-clamp-1">{outcome}</span>
                        </li>
                      ))}
                      {post.data.roadmap.outcomes.length > 2 && (
                        <li class="text-xs text-content-tertiary italic">
                          +{post.data.roadmap.outcomes.length - 2} more outcomes
                        </li>
                      )}
                    </ul>
                  </div>
                )}

                <!-- Tags -->
                {post.data.tags && (
                  <div class="flex flex-wrap gap-1 mt-4">
                    {post.data.tags.slice(0, 3).map(tag => (
                      <span class="px-2 py-1 text-xs bg-surface-secondary text-content-tertiary rounded">
                        {tag}
                      </span>
                    ))}
                    {post.data.tags.length > 3 && (
                      <span class="px-2 py-1 text-xs text-content-tertiary">
                        +{post.data.tags.length - 3}
                      </span>
                    )}
                  </div>
                )}
              </div>
            </article>
          </a>
        </div>
      );
    })}
  </div>
  
  <!-- Scroll indicators -->
  <div class="flex justify-center mt-4 gap-2">
    <div class="text-xs text-content-tertiary flex items-center gap-2">
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l4-4m0 0l4-4m-4 4H3m14 0a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
      <span>Scroll to explore timeline</span>
      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
      </svg>
    </div>
  </div>
</div>

<style>
  /* Custom scrollbar styling */
  .roadmap-horizontal div::-webkit-scrollbar {
    height: 8px;
  }
  
  .roadmap-horizontal div::-webkit-scrollbar-track {
    background: rgb(var(--color-surface-secondary));
    border-radius: 4px;
  }
  
  .roadmap-horizontal div::-webkit-scrollbar-thumb {
    background: rgb(var(--color-interactive-blue));
    border-radius: 4px;
  }
  
  .roadmap-horizontal div::-webkit-scrollbar-thumb:hover {
    background: rgb(var(--color-interactive-blue)) / 0.8;
  }
  
  /* Smooth scroll behavior */
  .roadmap-horizontal {
    scroll-behavior: smooth;
  }
</style>
