---
// Simplified Horizontal roadmap following ProjectCard design pattern
import { projectCardVariants, cn } from "../../utils/variants";
import type { CollectionEntry } from 'astro:content';

interface Props {
  posts: CollectionEntry<'posts'>[];
}

const { posts } = Astro.props;

// Sort posts chronologically
const sortedPosts = posts.sort((a, b) => a.data.date.getTime() - b.data.date.getTime());
---

<div class="roadmap-horizontal">
  <!-- Horizontal scroll container -->
  <div class="relative overflow-visible">
    <div class="flex gap-6 overflow-x-auto pb-8 pt-4 scroll-smooth px-4">
      {sortedPosts.map((post) => {
        const { title, description, date, status, roadmap, category } = post.data;

        const formattedDate = date.toLocaleDateString("en-US", {
          month: "short",
          day: "numeric",
          year: "numeric",
        });

        const classes = cn(
          projectCardVariants({ status }),
          // Status-specific hover border colors
          status === "completed" &&
            "hover:border-[oklch(var(--color-status-success))]/30",
          status === "in-progress" &&
            "hover:border-[oklch(var(--color-status-warning))]/30",
          status === "planned" &&
            "hover:border-[oklch(var(--color-interactive-blue))]/30",
          "w-80 flex-shrink-0"
        );

        return (
          <a href={`/posts/${post.id}`} class="block group flex-shrink-0">
            <article class={classes}>
              <!-- Status Badge -->
              <div class="absolute top-4 right-4">
                <span
                  class={cn(
                    "px-2 py-1 text-xs font-medium rounded-full",
                    status === "completed" && "bg-status-success/10 text-status-success",
                    status === "in-progress" && "bg-status-warning/10 text-status-warning",
                    status === "planned" && "bg-interactive-blue/10 text-interactive-blue"
                  )}
                >
                  {status.replace("-", " ")}
                </span>
              </div>

              <!-- Area/Branch Badge -->
              {
                category && (
                  <div class="absolute top-4 left-4">
                    <span class="px-2 py-1 text-xs font-medium rounded bg-surface-tertiary text-secondary">
                      {category}
                    </span>
                  </div>
                )
              }

              <!-- Content -->
              <div class="flex-1 flex flex-col space-y-3 mt-8">
                <h3
                  class={cn(
                    "text-xl font-semibold text-primary transition-theme",
                    status === "completed" &&
                      "group-hover:text-[oklch(var(--color-status-success))]",
                    status === "in-progress" &&
                      "group-hover:text-[oklch(var(--color-status-warning))]",
                    status === "planned" &&
                      "group-hover:text-[oklch(var(--color-interactive-blue))]"
                  )}
                >
                  {title}
                </h3>

                <p class="text-secondary line-clamp-2 flex-1">
                  {description}
                </p>

                <!-- Key Outcomes -->
                {
                  roadmap?.outcomes && roadmap.outcomes.length > 0 && (
                    <div class="text-sm text-tertiary">
                      <span class="font-medium">Key Outcomes:</span>
                      <ul class="mt-1 space-y-0.5">
                        {roadmap.outcomes.slice(0, 2).map((outcome) => (
                          <li class="text-secondary">â€¢ {outcome}</li>
                        ))}
                        {roadmap.outcomes.length > 2 && (
                          <li class="text-tertiary">+{roadmap.outcomes.length - 2} more</li>
                        )}
                      </ul>
                    </div>
                  )
                }

                <!-- Tags -->
                {
                  post.data.tags && post.data.tags.length > 0 && (
                    <div class="flex flex-wrap gap-2">
                      {post.data.tags.slice(0, 3).map((tag) => (
                        <span class="px-2 py-1 text-xs bg-surface-tertiary rounded-md text-tertiary">
                          {tag}
                        </span>
                      ))}
                      {post.data.tags.length > 3 && (
                        <span class="px-2 py-1 text-xs text-tertiary">
                          +{post.data.tags.length - 3} more
                        </span>
                      )}
                    </div>
                  )
                }

                <!-- Footer -->
                <div
                  class="flex items-center justify-between pt-4 border-t border-subtle mt-auto"
                >
                  <time class="text-sm text-tertiary" datetime={date.toISOString()}>
                    {formattedDate}
                  </time>

                  <!-- Timeline -->
                  {
                    roadmap?.timeline && (
                      <div class="text-sm text-tertiary">
                        {roadmap.timeline}
                      </div>
                    )
                  }
                </div>
              </div>
            </article>
          </a>
        );
      })}
    </div>
  </div>

  <!-- Scroll indicator -->
  <div class="flex justify-center mt-4">
    <div class="flex items-center gap-2 px-3 py-1.5 bg-surface-secondary/50 backdrop-blur-sm rounded-full border border-subtle text-xs text-tertiary">
      <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
      </svg>
      <span>Scroll to explore timeline</span>
      <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
      </svg>
    </div>
  </div>
</div>

<style>
  /* Simplified scrollbar styling */
  .roadmap-horizontal div::-webkit-scrollbar {
    height: 6px;
  }

  .roadmap-horizontal div::-webkit-scrollbar-track {
    background: oklch(var(--color-surface-secondary));
    border-radius: 3px;
    margin: 0 16px;
  }

  .roadmap-horizontal div::-webkit-scrollbar-thumb {
    background: oklch(var(--color-interactive-blue));
    border-radius: 3px;
    transition: background 0.2s ease;
  }

  .roadmap-horizontal div::-webkit-scrollbar-thumb:hover {
    background: oklch(var(--color-interactive-blue)/0.8);
  }

  /* Firefox scrollbar */
  .roadmap-horizontal div {
    scrollbar-width: thin;
    scrollbar-color: oklch(var(--color-interactive-blue)) oklch(var(--color-surface-secondary));
  }

  /* Smooth scroll behavior */
  .roadmap-horizontal {
    scroll-behavior: smooth;
  }
</style>
