---
// src/components/ui/Button.astro
// Example of Button using the new semantic color system
// Much cleaner and more readable!

import { buttonVariants, cn, type ButtonVariants } from "../../utils/variants";

interface Props extends ButtonVariants {
  href?: string;
  class?: string;
  ariaLabel?: string;
  type?: "button" | "submit" | "reset";
}

const {
  href,
  variant = "primary",
  size = "md",
  fullWidth = false,
  rounded = false,
  class: className = "",
  ariaLabel,
  type = "button",
} = Astro.props;

// Generate classes using CVA with semantic utilities
const classes = cn(
  buttonVariants({ variant, size, fullWidth, rounded }),
  className
);

// Determine which element to render
const Element = href ? "a" : "button";

// Check if this is a primary or roadmap variant for special styling
const isPrimary = variant === "primary";
const isRoadmap = variant === "roadmap";
---

<Element
  href={href}
  class={classes}
  aria-label={ariaLabel}
  type={!href ? type : undefined}
  {...href ? { target: href.startsWith("http") ? "_blank" : undefined } : {}}
  {...href ? { rel: href.startsWith("http") ? "noopener noreferrer" : undefined } : {}}
>
  {isPrimary && (
    <!-- Theme-aware background using semantic color -->
    <div class="absolute inset-0 bg-interactive-blue"></div>
  )}

  {isRoadmap && (
    <!-- Theme-aware background using gold color with inline style -->
    <div class="absolute inset-0" style="background-color: rgb(var(--color-interactive-gold));"></div>
  )}

  {isPrimary && (
    <!-- Hover glow effect using semantic colors -->
    <div
      class="absolute inset-0 transition-spring opacity-0 hover:opacity-100"
      style="box-shadow: 0 0 20px rgb(var(--color-interactive-blue) / 0.3), 0 4px 8px rgba(0, 0, 0, 0.1);"
    ></div>
  )}

  {isRoadmap && (
    <!-- Hover glow effect using gold color -->
    <div
      class="absolute inset-0 transition-spring opacity-0 hover:opacity-100"
      style="box-shadow: 0 0 20px rgb(var(--color-interactive-gold) / 0.3), 0 4px 8px rgba(0, 0, 0, 0.1);"
    ></div>
  )}

  <!-- Button content -->
  <span
    class="relative z-10 flex items-center"
    style={isRoadmap ? "color: rgb(var(--color-interactive-gold-contrast));" : ""}
  >
    <slot />
  </span>
</Element>

<!--
Usage Examples:

Primary Button:
<Button variant="primary" size="md">
  Submit Form
</Button>

Secondary Button:
<Button variant="secondary" size="lg">
  Cancel
</Button>

Link Button:
<Button href="/projects" variant="outline">
  View Projects
</Button>

The semantic classes make it much clearer what each style represents:
- bg-interactive-blue instead of a hex color
- text-primary instead of text-content-primary
- border-primary instead of border-primary/25 with opacity calculations
-->