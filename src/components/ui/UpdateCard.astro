---
import { formatRelativeDate } from "../../utils/dateUtils";
import { iconPaths } from "../../utils/iconPaths";
import { 
  updateCardVariants, 
  updateCardIconVariants, 
  updateCardTagVariants, 
  updateCardTitleVariants,
  cn,
  type UpdateCardVariants 
} from "../../utils/variants";

// src/components/ui/UpdateCard.astro
// Reusable component for displaying latest update cards with consistent styling
// Now using class-variance-authority for variant management

interface Props extends UpdateCardVariants {
  title: string;
  date: string;
  tag: string;
  description?: string;
  href: string;
  icon: "roadmap" | "project" | "literature";
  class?: string;
}

const { 
  title, 
  date, 
  tag, 
  description, 
  href, 
  icon, 
  variant = "milestone",
  class: className = ""
} = Astro.props;

// Generate classes using CVA
const cardClasses = cn(updateCardVariants({ variant }), className);
const iconClasses = cn(updateCardIconVariants({ variant }));
const tagClasses = cn(updateCardTagVariants({ variant }));
const titleClasses = cn(updateCardTitleVariants({ variant }));

// Left border indicator color - theme-aware for milestone
const borderColor = {
  milestone: "", // Will be set with conditional rendering for theme awareness
  project: "rgb(59, 130, 246)", // --color-accent
  resource: "rgb(34, 197, 94)", // --color-success
}[variant || "milestone"];
---

<a href={href} class={cardClasses}>
  {variant === "milestone" && (
    <>
      <!-- Theme-aware hover background for milestone cards -->
      <div class="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-300 dark:block hidden" style="background-color: rgba(212, 175, 55, 0.03);"></div>
      <div class="absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-300 dark:hidden block" style="background-color: rgba(208, 124, 92, 0.03);"></div>
    </>
  )}
  
  <!-- Left border indicator (recreating ::before pseudo-element) -->
  {
    variant === "milestone" ? (
      <>
        <div
          class="absolute left-0 top-0 bottom-0 w-0.5 rounded-r-sm transform scale-y-0 origin-center transition-transform duration-300 group-hover:scale-y-100 dark:block hidden"
          style="background-color: rgb(212, 175, 55);"
        />
        <div
          class="absolute left-0 top-0 bottom-0 w-0.5 rounded-r-sm transform scale-y-0 origin-center transition-transform duration-300 group-hover:scale-y-100 dark:hidden block"
          style="background-color: rgb(208, 124, 92);"
        />
      </>
    ) : (
      <div
        class="absolute left-0 top-0 bottom-0 w-0.5 rounded-r-sm transform scale-y-0 origin-center transition-transform duration-300 group-hover:scale-y-100"
        style={`background-color: ${borderColor};`}
      />
    )
  }

  <div class="flex items-center gap-3">
    <div class={iconClasses}>
      {
        variant === "milestone" ? (
          <>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-4 w-4 dark:block hidden"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
              stroke-width="2"
              style="color: rgb(212, 175, 55);"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d={iconPaths[icon]}
              />
            </svg>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-4 w-4 dark:hidden block"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
              stroke-width="2"
              style="color: rgb(208, 124, 92);"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d={iconPaths[icon]}
              />
            </svg>
          </>
        ) : (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-4 w-4"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            stroke-width="2"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d={iconPaths[icon]}
            />
          </svg>
        )
      }
    </div>

    <div class="min-w-0 flex-1">
      <div class={tagClasses}>
        {
          variant === "milestone" ? (
            <>
              <span
                class="dark:inline hidden"
                style="color: rgb(212, 175, 55);"
              >
                {tag}
              </span>
              <span
                class="dark:hidden inline"
                style="color: rgb(208, 124, 92);"
              >
                {tag}
              </span>
            </>
          ) : (
            tag
          )
        }
      </div>

      <h4 class={titleClasses}>
        {
          variant === "milestone" ? (
            <span class="group-hover:text-blue-500">{title}</span>
          ) : (
            title
          )
        }
      </h4>

      {
        description && (
          <p class="text-themed-secondary text-sm mb-2 leading-relaxed font-body line-clamp-2">
            {description}
          </p>
        )
      }

      <div
        class="text-xs text-themed-secondary font-mono opacity-75 group-hover:opacity-100 transition-opacity duration-200"
      >
        <time datetime={date} class="tabular-nums font-medium">
          {date}
        </time>
        <span class="opacity-60 mx-1.5">â€¢</span>
        <span class="opacity-80">
          {formatRelativeDate(date)}
        </span>
      </div>
    </div>
  </div>
</a>
