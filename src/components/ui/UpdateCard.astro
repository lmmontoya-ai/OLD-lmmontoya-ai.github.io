---
import { formatRelativeDate } from "../../utils/dateUtils";
import { iconPaths } from "../../utils/iconPaths";
import {
  updateCardVariants,
  updateCardIconVariants,
  updateCardTagVariants,
  updateCardTitleVariants,
  cn,
  type UpdateCardVariants,
} from "../../utils/variants";

// src/components/ui/UpdateCard.astro
// Reusable component for displaying latest update cards with consistent styling
// Now using class-variance-authority for variant management

interface Props extends UpdateCardVariants {
  title: string;
  date: string;
  tag: string;
  description?: string;
  href: string;
  icon: "roadmap" | "project" | "literature";
  class?: string;
}

const {
  title,
  date,
  tag,
  description,
  href,
  icon,
  variant = "milestone",
  class: className = "",
} = Astro.props;

// Generate classes using CVA
const cardClasses = cn(updateCardVariants({ variant }), className);
const iconClasses = cn(updateCardIconVariants({ variant }));
const tagClasses = cn(updateCardTagVariants({ variant }));
const titleClasses = cn(updateCardTitleVariants({ variant }));

// Define accent color class based on variant for the left border
const accentColorClass = {
  milestone: "bg-accent-milestone",
  project: "bg-accent-project",
  resource: "bg-accent-resource",
}[variant || "milestone"];

// Define hover background color class based on variant
const hoverBgColorClass = {
  milestone: "bg-accent-milestone-hover",
  project: "bg-accent-project-hover",
  resource: "bg-accent-resource-hover",
}[variant || "milestone"];
---

<a href={href} class={cardClasses}>
  <!-- Subtle hover background -->
  <div
    class={cn(
      "absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity duration-200",
      hoverBgColorClass
    )}
  >
  </div>

  <!-- Left border indicator -->
  <div
    class={cn(
      "absolute left-0 top-0 bottom-0 w-0.5 rounded-r-sm transform scale-y-0 origin-center transition-transform duration-300 ease-out group-hover:scale-y-100",
      accentColorClass
    )}
  >
  </div>

  <div class="flex items-center gap-3 relative z-10">
    {/* Added relative z-10 to ensure content is above hover background */}
    <div class={iconClasses}>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class={cn("h-4 w-4")}
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        stroke-width="2"
      >
        <path stroke-linecap="round" stroke-linejoin="round" d={iconPaths[icon]}
        ></path>
      </svg>
    </div>

    <div class="min-w-0 flex-1">
      <div class={tagClasses}>
        <span class={cn()}>
          {tag}
        </span>
      </div>

      <h4 class={titleClasses}>
        {/* Title will now correctly inherit hover color via CVA variant */}
        {title}
      </h4>

      {
        description && (
          <p class="text-content-secondary text-sm mb-2 leading-relaxed font-body line-clamp-2">
            {description}
          </p>
        )
      }

      <div
        class="text-xs text-content-secondary font-mono opacity-75 group-hover:opacity-100 transition-opacity duration-200"
      >
        <time datetime={date} class="tabular-nums font-medium">
          {date}
        </time>
        <span class="opacity-60 mx-1.5">â€¢</span>
        <span class="opacity-80">
          {formatRelativeDate(date)}
        </span>
      </div>
    </div>
  </div>
</a>
