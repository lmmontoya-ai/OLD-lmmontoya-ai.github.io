---
import PostPageHeader from '../components/layout/PostPageHeader.astro';
import Footer from '../components/layout/Footer.astro';
import Sidebar from '../components/post/Sidebar.astro';
import TableOfContents from '../components/post/TableOfContents.astro';
import PostHeader from '../components/post/PostHeader.astro';
import Breadcrumbs from '../components/ui/Breadcrumbs.astro';
import { getRelatedPosts, getBreadcrumbs } from '../utils/content';
import type { Post } from '../utils/content';
import { render } from 'astro:content';
import { ViewTransitions } from 'astro:transitions';
import "../styles/global.css";
import "../styles/transitions.css";

interface Props {
  post: Post;
}

const { post } = Astro.props;
const { Content, headings } = await render(post);

// Get related posts
const relatedPosts = await getRelatedPosts(post);
const breadcrumbs = getBreadcrumbs(post);

// Determine accent color based on primary type
const accentColors = {
  roadmap: 'gold',
  project: 'blue',
  literature: 'green',
  blog: 'blue',
  note: 'blue',
  guide: 'green',
} as const;

const primaryType = post.data.types[0];
const accentColor = post.data.display?.accent || accentColors[primaryType] || 'blue';

// Layout classes
const layoutClasses = {
  default: 'max-w-4xl',
  wide: 'max-w-6xl',
  centered: 'max-w-3xl',
} as const;

const contentWidth = layoutClasses[post.data.display?.layout || 'default'];

// Show TOC if enabled and there are headings
const showToc = post.data.display?.showToc !== false && headings.filter((h: any) => h.depth === 2 || h.depth === 3).length > 0;

// Accent color CSS classes
const accentClasses = {
  blue: 'border-brand-primary',
  gold: 'border-brand-secondary',
  green: 'border-status-success',
} as const;

const sidebarAccentClass = accentClasses[accentColor];
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={post.data.seo?.metaDescription || post.data.excerpt} />
    <title>{post.data.seo?.metaTitle || post.data.title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@400;500&family=IBM+Plex+Sans:wght@400;500;600&family=Inter:wght@500;600;700&display=swap"
      rel="stylesheet"
    />

    <ViewTransitions />

    <!-- Critical theme initialization - prevent flash of wrong theme -->
    <script is:inline>
      // This script must run immediately and synchronously to prevent flash
      (function() {
        function getStoredTheme() {
          if (typeof localStorage !== 'undefined') {
            return localStorage.getItem('theme');
          }
          return null;
        }

        function getSystemTheme() {
          if (typeof window !== 'undefined' && window.matchMedia) {
            return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
          }
          return 'light';
        }

        function applyTheme() {
          // Always check localStorage first, then system preference
          const storedTheme = getStoredTheme();
          const theme = storedTheme || getSystemTheme();

          // Apply theme immediately to prevent flash
          const root = document.documentElement;
          if (theme === 'dark') {
            root.classList.add('dark');
          } else {
            root.classList.remove('dark');
          }

          // Only store if not already stored
          if (typeof localStorage !== 'undefined' && !storedTheme) {
            localStorage.setItem('theme', theme);
          }
        }

        // Apply theme immediately on initial load
        applyTheme();

        // Handle view transitions - preserve theme during navigation
        document.addEventListener('astro:before-swap', (event) => {
          // Get current theme before swap
          const currentTheme = getStoredTheme() || getSystemTheme();

          // Apply to the new document
          if (currentTheme === 'dark') {
            event.newDocument.documentElement.classList.add('dark');
          } else {
            event.newDocument.documentElement.classList.remove('dark');
          }
        });

        // Also ensure theme is applied after swap
        document.addEventListener('astro:after-swap', applyTheme);
      })();
    </script>

    <!-- Add CSS to prevent any initial flash -->
    <style>
      /* Prevent flash of unstyled content during theme transitions */
      html {
        color-scheme: light;
      }
      html.dark {
        color-scheme: dark;
      }

      /* Ensure smooth transitions for theme changes */
      * {
        transition: background-color 0.3s ease, border-color 0.3s ease, color 0.3s ease;
      }
    </style>
  </head>
  <body class="bg-surface text-primary">
    <!-- Subtle grid overlay for technical aesthetic -->
    <div
      class="fixed inset-0 bg-grid-pattern opacity-[0.02] dark:opacity-[0.035] pointer-events-none z-0"
    ></div>

    <PostPageHeader />

    <main class="pt-4 min-h-[calc(100vh-var(--footer-height,12rem))] relative z-10">
      <div class="min-h-screen relative">
        <!-- Background pattern -->
        <div class="absolute inset-0 bg-grid-pattern opacity-[0.015] pointer-events-none"></div>

        <!-- Main container -->
        <div class="relative z-10 pt-16">
          <!-- Breadcrumbs with margin for fixed sidebar -->
          <div class="container mx-auto px-6 lg:px-16 xl:px-24 lg:ml-64 mb-4">
            <Breadcrumbs items={breadcrumbs} />
          </div>

      <!-- Split layout container -->
      <div class="relative">
        <!-- Sidebar Component - Fixed positioned, modern styling -->
        <Sidebar
          post={post}
          relatedPosts={relatedPosts}
          headings={headings}
          showToc={showToc}
          accentColor={accentColor}
        />

        <!-- Main content area with proper margin for fixed sidebar -->
        <div class="lg:ml-64">
          <div class="container mx-auto px-6 lg:px-16 xl:px-24">
            <main class={`${contentWidth} mx-auto`}>
              <!-- Post Header Component -->
              <PostHeader
                post={post}
                accentColor={accentColor}
              />

              <!-- Article content with enhanced prose styling -->
              <article
                class="prose prose-lg max-w-none
                  prose-headings:scroll-mt-24                prose-h1:text-3xl prose-h1:lg:text-4xl prose-h1:font-bold prose-h1:text-interactive-blue prose-h1:mb-6
                prose-h2:text-2xl prose-h2:lg:text-3xl prose-h2:font-semibold prose-h2:text-primary prose-h2:mt-12 prose-h2:mb-4 prose-h2:border-b prose-h2:border-border-primary prose-h2:pb-2
                prose-h3:text-xl prose-h3:lg:text-2xl prose-h3:font-medium prose-h3:text-primary prose-h3:mt-8 prose-h3:mb-3
                prose-h4:text-lg prose-h4:font-medium prose-h4:text-primary prose-h4:mt-6 prose-h4:mb-2
                prose-p:text-secondary prose-p:leading-relaxed prose-p:mb-6
                prose-a:text-interactive-blue prose-a:no-underline prose-a:font-medium hover:prose-a:underline hover:prose-a:text-interactive-blue
                prose-strong:text-primary prose-strong:font-semibold
                prose-em:text-secondary prose-em:italic
                prose-code:text-interactive-blue prose-code:bg-surface-secondary prose-code:px-1.5 prose-code:py-0.5 prose-code:rounded prose-code:text-sm prose-code:font-mono prose-code:before:content-none prose-code:after:content-none
                prose-pre:bg-surface-secondary prose-pre:border prose-pre:border-border-primary prose-pre:rounded-lg prose-pre:p-4 prose-pre:overflow-x-auto
                prose-blockquote:border-l-4 prose-blockquote:border-interactive-blue prose-blockquote:bg-surface-secondary prose-blockquote:pl-6 prose-blockquote:py-4 prose-blockquote:my-6 prose-blockquote:rounded-r-lg prose-blockquote:text-secondary prose-blockquote:italic
                  prose-ul:my-6 prose-ul:space-y-2
                  prose-ol:my-6 prose-ol:space-y-2
                  prose-li:text-content-secondary prose-li:leading-relaxed
                  prose-table:my-8 prose-table:border-collapse prose-table:border prose-table:border-border-secondary prose-table:rounded-lg prose-table:overflow-hidden
                  prose-th:bg-bg-secondary prose-th:border prose-th:border-border-secondary prose-th:px-4 prose-th:py-2 prose-th:text-content-primary prose-th:font-semibold prose-th:text-left
                  prose-td:border prose-td:border-border-secondary prose-td:px-4 prose-td:py-2 prose-td:text-content-secondary
                  prose-hr:border-border-secondary prose-hr:my-12"
                data-post-types={post.data.types.join(',')}
                data-post-category={post.data.category}
              >
                <Content />
              </article>

              <!-- Post Footer with modern styling -->
              <footer class="mt-16 pt-8 border-t border-border-secondary/50">
                <!-- Tags with modern styling -->
                {post.data.tags && post.data.tags.length > 0 && (
                  <div class="mb-8">
                    <h3 class="text-sm font-mono font-medium text-content-tertiary/80 uppercase tracking-wider mb-4 flex items-center gap-2">
                      <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
                      </svg>
                      Tags
                    </h3>
                    <div class="flex flex-wrap gap-2">
                      {post.data.tags.map((tag) => (
                        <span class="px-3 py-1.5 rounded-full text-xs font-medium bg-bg-secondary/60 text-content-secondary border border-border-secondary/60 hover:border-brand-primary/50 hover:text-brand-primary transition-all duration-200 cursor-default">
                          {tag}
                        </span>
                      ))}
                    </div>
                  </div>
                )}

                <!-- Share section with elegant styling -->
                <div class="mb-8">
                  <h3 class="text-sm font-mono font-medium text-content-tertiary/80 uppercase tracking-wider mb-4 flex items-center gap-2">
                    <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z"></path>
                    </svg>
                    Share
                  </h3>
                  <div class="flex gap-3">
                    <button
                      onclick="navigator.share ? navigator.share({title: this.dataset.title, url: this.dataset.url}) : navigator.clipboard.writeText(this.dataset.url)"
                      data-title={post.data.title}
                      data-url={Astro.url.href}
                      class="inline-flex items-center gap-2 px-4 py-2.5 rounded-xl text-sm font-medium bg-bg-secondary/60 text-content-secondary border border-border-secondary/60 hover:border-brand-primary/50 hover:text-brand-primary hover:bg-bg-secondary transition-all duration-200"
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                      </svg>
                      Copy Link
                    </button>
                  </div>
                </div>

                <!-- Related posts with modern card design -->
                {post.data.display?.showRelated !== false && relatedPosts.length > 0 && (
                  <div class="mt-12">
                    <h3 class="text-lg font-sans font-semibold text-content-primary mb-6 flex items-center gap-2">
                      <svg class="w-5 h-5 text-brand-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"></path>
                      </svg>
                      Related Posts
                    </h3>
                    <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
                      {relatedPosts.map((relatedPost) => (
                        <a
                          href={`/posts/${relatedPost.id}`}
                          class="group block p-6 bg-bg-secondary/30 backdrop-blur-sm rounded-xl border border-border-secondary/60 hover:border-brand-primary/60 hover:bg-bg-secondary/50 transition-all duration-200"
                        >
                          <h4 class="font-sans font-semibold text-content-primary group-hover:text-brand-primary transition-colors mb-2 line-clamp-2">
                            {relatedPost.data.title}
                          </h4>
                          <p class="text-sm text-content-tertiary mb-3 line-clamp-3">
                            {relatedPost.data.excerpt}
                          </p>
                          <div class="flex items-center gap-2 text-xs text-content-tertiary">
                            <time datetime={relatedPost.data.date.toISOString()}>
                              {relatedPost.data.date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}
                            </time>
                            <span class="opacity-50">•</span>
                            <span class="capitalize">{relatedPost.data.types[0]}</span>
                          </div>
                        </a>
                      ))}
                    </div>
                  </div>
                )}
              </footer>
            </main>
          </div>
        </div>
    </div>
  </div>

  <!-- Mobile TOC (Fixed bottom sheet) -->
  {showToc && (
    <div class="lg:hidden fixed bottom-0 left-0 right-0 z-50">
      <TableOfContents
        headings={headings}
        variant="mobile"
      />
    </div>
  )}
</Layout>

<style>
  /* Custom prose overrides for interactive content */
  article :global(.interactive-demo) {
    margin: 2rem -1rem;
    padding: 2rem;
    background: rgb(var(--color-bg-secondary));
    border-radius: 1rem;
    border: 1px solid rgb(var(--color-border-primary));
  }

  article :global(.full-bleed) {
    margin-left: calc(-50vw + 50%);
    margin-right: calc(-50vw + 50%);
  }

  /* Smooth scroll for anchor links */
  html {
    scroll-behavior: smooth;
    scroll-padding-top: 6rem;
  }

  /* Line clamp utility */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

<script>
  // Scroll spy for active heading
  document.addEventListener('astro:page-load', () => {
    const tocLinks = document.querySelectorAll('[data-toc-link]');
    const headings = document.querySelectorAll('h2, h3');

    if (tocLinks.length === 0 || headings.length === 0) return;

    // Create intersection observer
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          const id = entry.target.id;
          const tocLink = document.querySelector(`[data-heading-id="${id}"]`);

          if (tocLink) {
            if (entry.isIntersecting) {
              // Remove active from all links
              tocLinks.forEach((link) => {
                link.classList.remove('text-brand-primary', 'font-medium');
                link.classList.add('text-content-secondary');
              });

              // Add active to current link
              tocLink.classList.remove('text-content-secondary');
              tocLink.classList.add('text-brand-primary', 'font-medium');
            }
          }
        });
      },
      {
        rootMargin: '-20% 0% -35% 0%',
        threshold: 0
      }
    );

    // Observe all headings
    headings.forEach((heading) => {
      if (heading.id) observer.observe(heading);
    });

    // Smooth scroll on click
    tocLinks.forEach((link) => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        const targetId = link.getAttribute('data-heading-id');

        if (targetId) {
          const targetElement = document.getElementById(targetId);
          if (targetElement) {
            targetElement.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        }
      });
    });
  });

  // Search functionality placeholder (removed from UI)
  document.addEventListener('astro:page-load', () => {
    // Search functionality has been removed from the sidebar
    console.log('Post layout loaded');
  });
</script>
