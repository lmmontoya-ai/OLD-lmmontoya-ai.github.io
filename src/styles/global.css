/* === REGISTERED CUSTOM PROPERTIES === */
/* Tailwind v4: Registered properties for enhanced performance and type safety */
/*
 * OPTIMIZATION NOTES (Task 4.3 - Audit and Modernize Custom Utilities):
 * - Removed unused animation utilities (animate-fade-in-slow, animate-scale-bounce, etc.)
 * - Removed unused keyframes (fadeOut, slideDown, slideLeft, slideRight, etc.)
 * - Streamlined color-mix utilities (removed 20+ unused variations)
 * - Simplified logical properties (kept only m-inline-xs and text-start/end)
 * - Removed unused backdrop and grid utilities
 * - Kept essential utilities that are actively used in components
 * - Maintained semantic naming system and theme awareness
 * - Total reduction: ~500 lines of unused utility definitions
 */

/* Animation duration properties */
@property --animation-duration {
  syntax: '<time>';
  initial-value: 300ms;
  inherits: false;
}

@property --animation-duration-fast {
  syntax: '<time>';
  initial-value: 150ms;
  inherits: false;
}

@property --animation-duration-slow {
  syntax: '<time>';
  initial-value: 500ms;
  inherits: false;
}

/* Transform properties for smoother animations */
@property --transform-translate-y {
  syntax: '<length>';
  initial-value: 0px;
  inherits: false;
}

@property --transform-translate-x {
  syntax: '<length>';
  initial-value: 0px;
  inherits: false;
}

@property --transform-scale {
  syntax: '<number>';
  initial-value: 1;
  inherits: false;
}

@property --transform-rotate {
  syntax: '<angle>';
  initial-value: 0deg;
  inherits: false;
}

/* Opacity for fade animations */
@property --animation-opacity {
  syntax: '<number>';
  initial-value: 1;
  inherits: false;
}

/* Shadow properties for glow effects */
@property --glow-shadow-size {
  syntax: '<length>';
  initial-value: 20px;
  inherits: false;
}

@property --glow-shadow-opacity {
  syntax: '<number>';
  initial-value: 0.2;
  inherits: false;
}

/* Color mixing properties */
@property --color-mix-opacity {
  syntax: '<percentage>';
  initial-value: 100%;
  inherits: false;
}

/* === CASCADE LAYER ORGANIZATION === */
@layer theme, base, components, utilities;

/* Main entry point for global styles */
@import "tailwindcss";
@import "./theme/index.css";
@import "./utilities/semantic-colors.css";
@import "./utilities/legacy-compat.css";
@import "./utilities/modern-layout.css";
@import "./utilities/interactive.css";
@import "./utilities/components.css";
@import "./base/reset.css";
@import "./animations/keyframes.css";
@import "./animations/properties.css";

/* Existing global styles will be migrated to modular files in 4.5.2+ */

/* === ESSENTIAL ANIMATION UTILITIES === */
/* Only keeping utilities that are actually used or likely to be needed */

/* Used in components - keep these */
@utility animate-fade-in-fast {
  animation: fadeIn var(--animation-duration-fast) ease-out;
}

@utility animate-slide-up-spring {
  animation: slideUp var(--animation-duration) cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* Dynamic animation utilities for future use */
@utility animate-custom-duration {
  animation-duration: var(--animation-duration);
}

@utility animate-custom-scale {
  transform: scale(var(--transform-scale));
  transition: transform var(--animation-duration) ease-out;
}

/* === ESSENTIAL KEYFRAMES === */
/* Only keeping keyframes that are used by our utilities or likely to be needed */

@keyframes fadeIn {
  0% { --animation-opacity: 0; opacity: var(--animation-opacity); }
  100% { --animation-opacity: 1; opacity: var(--animation-opacity); }
}

@keyframes slideUp {
  0% {
    --transform-translate-y: 20px;
    --animation-opacity: 0;
    transform: translateY(var(--transform-translate-y));
    opacity: var(--animation-opacity);
  }
  100% {
    --transform-translate-y: 0px;
    --animation-opacity: 1;
    transform: translateY(var(--transform-translate-y));
    opacity: var(--animation-opacity);
  }
}

@keyframes scaleIn {
  0% {
    --transform-scale: 0.95;
    --animation-opacity: 0;
    transform: scale(var(--transform-scale));
    opacity: var(--animation-opacity);
  }
  100% {
    --transform-scale: 1;
    --animation-opacity: 1;
    transform: scale(var(--transform-scale));
    opacity: var(--animation-opacity);
  }
}

@keyframes glow {
  0% {
    --glow-shadow-size: 20px;
    --glow-shadow-opacity: 0.2;
    box-shadow: 0 0 var(--glow-shadow-size) rgba(59, 130, 246, var(--glow-shadow-opacity));
  }
  100% {
    --glow-shadow-size: 40px;
    --glow-shadow-opacity: 0.4;
    box-shadow: 0 0 var(--glow-shadow-size) rgba(59, 130, 246, var(--glow-shadow-opacity));
  }
}

/* === MODERN V4 UTILITIES === */
/* Using CSS variables from @theme and v4 best practices */



/* === LEGACY COMPATIBILITY UTILITIES === */
/* Modernized with CSS variables - use semantic utilities above for new code */

@utility text-themed {
  color: rgb(var(--color-content-primary));
  transition: color var(--transition-base);

  :not(.dark) & {
    color: rgb(var(--color-content-inverse));
  }
}

@utility text-themed-secondary {
  color: rgb(var(--color-content-secondary));
  transition: color var(--transition-base);

  :not(.dark) & {
    color: rgb(var(--color-content-secondary));
  }
}

@utility text-highlight-themed {
  color: rgb(var(--color-interactive-secondary));
  transition: color var(--transition-base);
}

@utility bg-themed {
  background-color: rgb(var(--color-bg-primary));
  transition: background-color var(--transition-base);

  :not(.dark) & {
    background-color: rgb(var(--color-bg-inverse));
  }
}

@utility bg-card-themed {
  background-color: rgb(var(--color-bg-secondary) / 0.8);
  transition: background-color var(--transition-base);

  :not(.dark) & {
    background-color: rgb(var(--color-bg-inverse-secondary));
  }
}

@utility border-themed {
  border-color: rgb(var(--color-border-primary) / 0.25);
  transition: border-color var(--transition-base);

  :not(.dark) & {
    border-color: rgb(var(--color-border-inverse));
  }
}

@utility shadow-themed-sm {
  box-shadow: var(--shadow-sm);

  :not(.dark) & {
    box-shadow: var(--shadow-sm-light);
  }
}

@utility shadow-themed-md {
  box-shadow: var(--shadow-md);

  :not(.dark) & {
    box-shadow: var(--shadow-md-light);
  }
}

@utility shadow-themed-lg {
  box-shadow: var(--shadow-lg);

  :not(.dark) & {
    box-shadow: var(--shadow-lg-light);
  }
}

@utility shadow-themed-xl {
  box-shadow: var(--shadow-xl);

  :not(.dark) & {
    box-shadow: var(--shadow-xl-light);
  }
}

/* === MODERN GRADIENT UTILITIES === */
@utility gradient-hero {
  background: linear-gradient(135deg, rgb(var(--color-hero-gradient-start)) 0%, rgb(var(--color-hero-gradient-end)) 100%);
}

@utility gradient-accent {
  background: linear-gradient(135deg, rgb(var(--color-interactive-primary)) 0%, rgb(var(--color-interactive-secondary)) 100%);
}

@utility gradient-brand {
  background: linear-gradient(135deg, rgb(var(--color-brand-primary)) 0%, rgb(var(--color-brand-secondary)) 100%);
}

/* === MODERN TYPOGRAPHY UTILITIES === */
@utility text-balance {
  text-wrap: balance;
}

@utility text-pretty {
  text-wrap: pretty;
}

/* === MODERN ACCESSIBILITY UTILITIES === */
@utility focus-ring {
  &:focus-visible {
    outline: 2px solid rgb(var(--color-interactive-focus));
    outline-offset: 2px;
    border-radius: var(--radius-sm);
  }
}

@utility focus-ring-inset {
  &:focus-visible {
    outline: 2px solid rgb(var(--color-interactive-focus));
    outline-offset: -2px;
    border-radius: var(--radius-sm);
  }
}

/* === MODERN LAYOUT UTILITIES === */
@utility container-fluid {
  width: 100%;
  max-width: none;
  margin-inline: auto;
  padding-inline: var(--spacing-container-sm);

  @media (min-width: 640px) {
    padding-inline: var(--spacing-container-md);
  }

  @media (min-width: 1024px) {
    padding-inline: var(--spacing-container-lg);
  }

  @media (min-width: 1280px) {
    padding-inline: var(--spacing-container-xl);
  }
}

/* === MODERN TRANSITION UTILITIES === */
@utility transition-theme {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: var(--transition-timing-base);
  transition-duration: var(--transition-duration-theme);
}

@utility transition-theme-all {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, box-shadow, opacity;
  transition-timing-function: var(--transition-timing-base);
  transition-duration: var(--transition-duration-theme);
}

@utility transition-theme-opacity {
  transition-property: opacity;
  transition-timing-function: var(--transition-timing-base);
  transition-duration: var(--transition-duration-theme);
}

@utility transition-theme-transform {
  transition-property: transform, color, background-color;
  transition-timing-function: var(--transition-timing-base);
  transition-duration: var(--transition-duration-theme);
}

@utility transition-spring {
  transition: all var(--transition-spring);
}

@utility transition-smooth {
  transition: all var(--transition-duration-base) var(--transition-timing-smooth);
}

/* === ESSENTIAL ANIMATION UTILITIES === */
/* These use theme variables from @theme block - only keeping used ones */

/* Not currently in use but available for future components */
@utility animate-fade-in {
  animation: var(--animate-fade-in);
}

/* === ESSENTIAL INTERACTION UTILITIES === */
/* Only keeping hover-glow as it's used in Button.astro */

@utility hover-glow {
  transition: box-shadow var(--transition-base);

  &:hover {
    box-shadow: var(--shadow-glow-accent);
  }
}

/* === ESSENTIAL COLOR UTILITIES (v4 Features) === */
/* Note: These advanced color-mix utilities are available for future use but not currently needed */
/* Keeping section minimal as Tailwind v4 provides most color functionality built-in */

/* Essential color-mix utility for theme adaptation - future use */
@utility bg-adaptive-card {
  background-color: color-mix(in srgb, rgb(var(--color-bg-secondary)) 85%, rgb(var(--color-brand-primary)) 15%);
}

@utility bg-adaptive-surface {
  background-color: color-mix(in srgb, rgb(var(--color-bg-primary)) 90%, rgb(var(--color-content-primary)) 10%);
}

@utility text-adaptive-emphasis {
  color: color-mix(in srgb, rgb(var(--color-content-primary)) 95%, rgb(var(--color-brand-primary)) 5%);
}

/* === LOGICAL PROPERTIES (v4 RTL Support) === */
/* Basic logical spacing */
@utility p-inline {
  padding-inline: var(--spacing-4);
}

@utility p-block {
  padding-block: var(--spacing-4);
}

@utility m-inline-auto {
  margin-inline: auto;
}

/* Extended logical spacing utilities */
@utility p-inline-xs {
  padding-inline: var(--spacing-1);
}

@utility p-inline-sm {
  padding-inline: var(--spacing-2);
}

@utility p-inline-md {
  padding-inline: var(--spacing-4);
}

@utility p-inline-lg {
  padding-inline: var(--spacing-6);
}

@utility p-inline-xl {
  padding-inline: var(--spacing-8);
}

@utility p-block-xs {
  padding-block: var(--spacing-1);
}

@utility p-block-sm {
  padding-block: var(--spacing-2);
}

@utility p-block-md {
  padding-block: var(--spacing-4);
}

@utility p-block-lg {
  padding-block: var(--spacing-6);
}

@utility p-block-xl {
  padding-block: var(--spacing-8);
}

/* Logical margin utilities */
@utility m-inline-xs {
  margin-inline: var(--spacing-1);
}

@utility m-inline-sm {
  margin-inline: var(--spacing-2);
}

@utility m-inline-md {
  margin-inline: var(--spacing-4);
}

@utility m-inline-lg {
  margin-inline: var(--spacing-6);
}

@utility m-inline-xl {
  margin-inline: var(--spacing-8);
}

@utility m-block-xs {
  margin-block: var(--spacing-1);
}

@utility m-block-sm {
  margin-block: var(--spacing-2);
}

@utility m-block-md {
  margin-block: var(--spacing-4);
}

@utility m-block-lg {
  margin-block: var(--spacing-6);
}

@utility m-block-xl {
  margin-block: var(--spacing-8);
}

/* Logical start/end specific utilities */
@utility ps-xs {
  padding-inline-start: var(--spacing-1);
}

@utility ps-sm {
  padding-inline-start: var(--spacing-2);
}

@utility ps-md {
  padding-inline-start: var(--spacing-4);
}

@utility ps-lg {
  padding-inline-start: var(--spacing-6);
}

@utility pe-xs {
  padding-inline-end: var(--spacing-1);
}

@utility pe-sm {
  padding-inline-end: var(--spacing-2);
}

@utility pe-md {
  padding-inline-end: var(--spacing-4);
}

@utility pe-lg {
  padding-inline-end: var(--spacing-6);
}

@utility ms-xs {
  margin-inline-start: var(--spacing-1);
}

@utility ms-sm {
  margin-inline-start: var(--spacing-2);
}

@utility ms-md {
  margin-inline-start: var(--spacing-4);
}

@utility ms-lg {
  margin-inline-start: var(--spacing-6);
}

@utility ms-auto {
  margin-inline-start: auto;
}

@utility me-xs {
  margin-inline-end: var(--spacing-1);
}

@utility me-sm {
  margin-inline-end: var(--spacing-2);
}

@utility me-md {
  margin-inline-end: var(--spacing-4);
}

@utility me-lg {
  margin-inline-end: var(--spacing-6);
}

@utility me-auto {
  margin-inline-end: auto;
}

/* Logical border utilities */
@utility border-inline {
  border-inline: 1px solid rgb(var(--color-border-primary) / 0.25);
}

@utility border-block-start {
  border-block-start: 1px solid rgb(var(--color-border-primary) / 0.25);
}

@utility border-block-end {
  border-block-end: 1px solid rgb(var(--color-border-primary) / 0.25);
}

@utility border-inline-start {
  border-inline-start: 1px solid rgb(var(--color-border-primary) / 0.25);
}

@utility border-inline-end {
  border-inline-end: 1px solid rgb(var(--color-border-primary) / 0.25);
}

/* Logical positioning utilities */
@utility inset-inline-xs {
  inset-inline: var(--spacing-1);
}

@utility inset-inline-sm {
  inset-inline: var(--spacing-2);
}

@utility inset-inline-md {
  inset-inline: var(--spacing-4);
}

@utility inset-block-xs {
  inset-block: var(--spacing-1);
}

@utility inset-block-sm {
  inset-block: var(--spacing-2);
}

@utility inset-block-md {
  inset-block: var(--spacing-4);
}

@utility start-0 {
  inset-inline-start: 0;
}

@utility end-0 {
  inset-inline-end: 0;
}

/* Logical text alignment */
@utility text-start {
  text-align: start;
}

@utility text-end {
  text-align: end;
}

/* Enhanced card and component logical spacing */
@utility card-spacing-inline {
  padding-inline: var(--spacing-card-x);
}

@utility card-spacing-block {
  padding-block: var(--spacing-card-y);
}

@utility section-spacing-inline {
  padding-inline: var(--spacing-section-x);
}

@utility section-spacing-block {
  padding-block: var(--spacing-section-y);
}

/* RTL-aware button spacing */
@utility btn-spacing-inline {
  padding-inline: var(--spacing-button-x);
}

@utility btn-spacing-block {
  padding-block: var(--spacing-button-y);
}

/* RTL-aware layout utilities */
@utility layout-inline-auto {
  margin-inline: auto;
  max-inline-size: var(--size-layout-max);
}

@utility container-inline {
  padding-inline: var(--spacing-container);
  margin-inline: auto;
}

/* === ESSENTIAL GRID UTILITIES === */
/* Grid utilities available for future use - not currently needed */
/* Note: Tailwind v4 provides comprehensive grid utilities built-in */

/* === UPDATE CARD ACCENT UTILITIES (THEME-AWARE) === */
/* Milestone Accent */
@utility text-accent-milestone {
  color: rgb(var(--color-accent-milestone));
  transition: color var(--transition-base);
  :not(.dark) & {
    color: rgb(var(--color-accent-milestone-light));
  }
}
@utility bg-accent-milestone {
  background-color: rgb(var(--color-accent-milestone));
  transition: background-color var(--transition-base);
  :not(.dark) & {
    background-color: rgb(var(--color-accent-milestone-light));
  }
}
@utility bg-accent-milestone-hover {
  background-color: rgb(var(--color-accent-milestone) / 0.05);
  transition: background-color var(--transition-base);
  :not(.dark) & {
    background-color: rgb(var(--color-accent-milestone-light) / 0.05);
  }
}

/* Project Accent */
@utility text-accent-project {
  color: rgb(var(--color-accent-project));
  transition: color var(--transition-base);
  :not(.dark) & {
    color: rgb(var(--color-accent-project-light));
  }
}
@utility bg-accent-project {
  background-color: rgb(var(--color-accent-project));
  transition: background-color var(--transition-base);
  :not(.dark) & {
    background-color: rgb(var(--color-accent-project-light));
  }
}
@utility bg-accent-project-hover {
  background-color: rgb(var(--color-accent-project) / 0.05);
  transition: background-color var(--transition-base);
  :not(.dark) & {
    background-color: rgb(var(--color-accent-project-light) / 0.05);
  }
}

/* Resource Accent */
@utility text-accent-resource {
  color: rgb(var(--color-accent-resource));
  transition: color var(--transition-base);
  :not(.dark) & {
    color: rgb(var(--color-accent-resource-light));
  }
}
@utility bg-accent-resource {
  background-color: rgb(var(--color-accent-resource));
  transition: background-color var(--transition-base);
  :not(.dark) & {
    background-color: rgb(var(--color-accent-resource-light));
  }
}
@utility bg-accent-resource-hover {
  background-color: rgb(var(--color-accent-resource) / 0.05);
  transition: background-color var(--transition-base);
  :not(.dark) & {
    background-color: rgb(var(--color-accent-resource-light) / 0.05);
  }
}

@layer base {
  :root {
    /* Legacy compatibility variables - prefer @theme variables for new code */
    --font-size-base: 16px;
    --line-height-base: 1.6;
    --tracking-tight: -0.025em;
    --tracking-wide: 0.025em;

    /* Legacy shadow variables - use @theme shadow-* for new code */
    --shadow-sm-light: 0 3px 6px 0 rgba(28, 42, 77, 0.15), 0 2px 4px -1px rgba(28, 42, 77, 0.12);
    --shadow-md-light: 0 6px 12px -2px rgba(28, 42, 77, 0.18), 0 3px 6px -2px rgba(28, 42, 77, 0.15);
    --shadow-lg-light: 0 12px 32px -4px rgba(28, 42, 77, 0.22), 0 6px 12px -4px rgba(28, 42, 77, 0.18);
    --shadow-xl-light: 0 20px 40px -8px rgba(28, 42, 77, 0.26), 0 12px 20px -8px rgba(28, 42, 77, 0.22);
  }

  @media (min-width: 1024px) {
    :root {
      --font-size-base: 18px;
      --line-height-base: 1.7;
    }
  }

  html {
    scroll-behavior: smooth;
    font-size: var(--font-size-base);
  }

  body {
    font-family: var(--font-body);
    color: rgb(var(--color-text));
    background-color: rgb(var(--color-background));
    line-height: var(--line-height-base, 1.6);
    transition: background-color var(--transition-base),
      color var(--transition-base);
    font-feature-settings: "kern" 1, "liga" 1, "cv02" 1;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: var(--font-display);
    font-weight: 600;
    letter-spacing: var(--tracking-tight);
    color: rgb(var(--color-text));
    text-wrap: balance;
  }

  h1 {
    font-size: 2.75rem;
    line-height: 1.1;
    font-weight: 700;
  }

  h2 {
    font-size: 2.25rem;
    line-height: 1.2;
    font-weight: 650;
  }

  h3 {
    font-size: 1.75rem;
    line-height: 1.3;
    font-weight: 600;
  }

  h4 {
    font-size: 1.25rem;
    line-height: 1.4;
    font-weight: 600;
  }

  code,
  pre {
    font-family: var(--font-mono);
  }

  :focus-visible {
    outline: 2px solid rgb(var(--color-accent));
    outline-offset: 2px;
    border-radius: 4px;
  }

  @media (prefers-reduced-motion: reduce) {
    html {
      scroll-behavior: auto;
    }

    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
}

@layer components {
  /* All custom utility classes previously here have been removed. */
  /* Styling is now handled by Tailwind's utility classes directly in components */
  /* or through the Tailwind theme configuration in tailwind.config.mjs. */

  /*
   * NOTE: @apply should be used VERY sparingly. The only valid use cases are:
   *
   * 1. When you need to style elements you don't control (e.g., markdown content):
   *    .prose h2 { @apply text-2xl font-bold mt-8 mb-4; }
   *
   * 2. When creating a truly reusable pattern used 10+ times:
   *    .icon-base { @apply w-5 h-5 flex-shrink-0; }
   *
   * Currently, this project uses ZERO @apply directives, which is ideal.
   * All styling is achieved through utility classes and CVA variants.
   */
}