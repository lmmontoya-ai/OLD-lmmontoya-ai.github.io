/**
 * Component-Specific Utilities
 *
 * Purpose:
 *   Provides utility classes used by specific components (e.g., UpdateCard, Card, Hero) that are not general-purpose, legacy, or semantic utilities.
 *   Enables advanced gradients, animation helpers, and component-specific effects following Tailwind v4 and modern CSS best practices.
 *
 * Tokens/Variables Used:
 *   - --color-hero-gradient-start, --color-hero-gradient-end
 *   - --color-interactive-primary, --color-interactive-secondary
 *   - --color-brand-primary, --color-brand-secondary
 *   - --animation-duration, --animation-duration-fast
 *   - --transform-scale
 *   - All relevant tokens from theme/colors.css and theme/animations.css
 *
 * Migration Notes:
 *   - Task 4.5.7: Extracted from global.css for modularization.
 *   - Only actively used, non-legacy, non-semantic, non-interactive utilities are included here.
 *   - Follows Tailwind v4 best practices for modular CSS.
 *
 * Usage/Contribution:
 *   - Use these utilities only in the components that require them.
 *   - For new component-specific utilities, document usage and update theme tokens as needed.
 *   - Do not add general-purpose or legacy utilities here.
 *
 * @see theme/colors.css, theme/animations.css for token definitions
 */

/* === MODERN GRADIENT UTILITIES === */
.gradient-hero {
  background: linear-gradient(135deg, rgb(var(--color-hero-gradient-start)) 0%, rgb(var(--color-hero-gradient-end)) 100%);
}

.gradient-accent {
  background: linear-gradient(135deg, rgb(var(--color-interactive-primary)) 0%, rgb(var(--color-interactive-secondary)) 100%);
}

.gradient-brand {
  background: linear-gradient(135deg, rgb(var(--color-brand-primary)) 0%, rgb(var(--color-brand-secondary)) 100%);
}

/* === ESSENTIAL ANIMATION UTILITIES === */
.animate-fade-in-fast {
  animation: fadeIn var(--animation-duration-fast) ease-out;
}

.animate-slide-up-spring {
  animation: slideUp var(--animation-duration) cubic-bezier(0.34, 1.56, 0.64, 1);
}

.animate-custom-duration {
  animation-duration: var(--animation-duration);
}

.animate-custom-scale {
  transform: scale(var(--transform-scale));
  transition: transform var(--animation-duration) ease-out;
}
/* Component-Specific Utilities: Button, Card, UpdateCard, etc. */

/* === UPDATE CARD ACCENTS === */
/* Base style for all update cards, can be combined with specific accent color */
.update-card {
  position: relative; /* For pseudo-element positioning */
  padding-left: 10px; /* Create space for the ::before element */
  min-height: 50px;   /* Ensure card has some height for ::before to span */
  z-index: 0;         /* Establish a stacking context */
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  overflow: hidden; /* To ensure pseudo-element doesn't overflow card bounds */
}

.update-card::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 3px;
  background-color: currentColor; /* Takes color from parent (e.g., .update-card-milestone) */
  transition: width 0.3s ease, box-shadow 0.3s ease;
  z-index: 1; /* Render above card's direct content */
}

.update-card:hover {
  transform: translateX(4px);
}

.update-card:hover::before {
  width: 5px; /* Slightly thicker border on hover */
  /* Enhanced border glow - using a subtle shadow on the pseudo-element */
  box-shadow: 0 0 8px 0 currentColor;
}

/* Milestone Update Card */
.update-card-milestone {
  color: rgb(var(--color-accent-milestone)); /* Sets currentColor for the ::before pseudo-element */
}

/* Project Update Card */
.update-card-project {
  color: rgb(var(--color-accent-project)); /* Sets currentColor for the ::before pseudo-element */
}

/* Resource Update Card */
.update-card-resource {
  color: rgb(var(--color-accent-resource)); /* Sets currentColor for the ::before pseudo-element */
}

/* Literature Update Card (uses Resource accent color) */
.update-card-literature {
  color: rgb(var(--color-accent-resource)); /* Sets currentColor for the ::before pseudo-element, same as resource */
}

/* === TAG ACCENTS === */
/* Base styling for tags - apply this along with a color variant */
.tag-base {
  display: inline-block;
  padding: 0.1875rem 0.375rem;
  font-family: var(--font-family-mono);
  font-size: 0.6875rem;
  text-transform: uppercase;
  border-radius: 0.25rem;
  line-height: 1.2;
  font-weight: 500;
}

/* Milestone Tag */
.tag-milestone {
  background-color: rgb(var(--color-accent-milestone));
  color: rgb(var(--color-surface-secondary)); /* Assuming text on gold bg should be dark/light depending on theme */
}

.dark .tag-milestone {
 color: rgb(var(--color-text-primary)); /* Text on dark gold should be light */
}

/* Project Tag */
.tag-project {
  background-color: rgb(var(--color-accent-project));
  color: rgb(var(--color-text-primary)); /* Text on blue should be light */
}

/* Resource Tag */
.tag-resource {
  background-color: rgb(var(--color-accent-resource));
  color: rgb(var(--color-text-primary)); /* Text on green should be light */
}
